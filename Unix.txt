



            Arvind    Snehal      Aditya    Sumit    Rikshit
Akshay      Ankit     Saket       Priya     chhaya   Naved
Chetan      Rajesh                Lakhan

                        Vishhal


Production Ready - live environment 


    Unix box
    ---------
        database installed
        services installed
        |scripts
        |
        |
    -----------
    |   |   |   |   |   |   |
    1mn......


    Unix / Linux Fundamentals and shell scripting


                    who
                    |? scripter, sql developer, java developer, tester, deployer
            ------------------
            |                |
            where Pune Saama |   when  2021
            |   space        |time
        -------------------------
        |           |           |
        why         what        how
        reason      inFORMation     apply

    mental physical emotinal spritual

                machine     mind        technology
                yantra      mantra      tantra
                tangible    intangible  intangible


Day 1 Agenda
------------

1. Introduction to Unix/Linux
2. getting around the system
3. Unix file system structure
4 .Basic commands
   file
   directory 
5. Vi editor
6. file permissions
7. file links





Introduction to Unix/Linux


Unix        
                 - Ken Thompson

    SYSIII
    |
    SCO-Unix

        UNiplexed Information Computing System

            UNICS
		UNIX

            1 machine - server
            |  h/w               s/w
            |  Abundance        utitilies/ websites
            | 32 CPU 
            | 100s TB 
            |
    ------------------
    |||||||||||||
    1 2 3 ...mn   p/w  Lehman Brothers <-- Nomura

=>     SUN         IBM         HP            Apple                  any
        |           |           |            |                      |
cpu    SParc        BB          hpseries    powerpc/intel/M1       any     
        |           |           |            |                      |
o/s    Solaris      AIX         hp-ux       macintosh       redhat -  Linux
        <------------------unix------------------>          
        |
        ls          ls          ls          ls      

        bajaj           honda          TVS              eicher
        |               |               |               |
        DTSi            hondaS          tvs engine      royal enfield
        |               |               |               |
        pulser 150      Unicorn         Apache      bullet 350
        220             Shine           jupitor     classic
                        Activa

        <--------------bike--------------------------->

            Linux
            |
    ------------------------------------
    |           |           |       |           50 flavours
    redhat  mandrake     caldera    suse
    |
----------
|       |           
paid    free
RHEL       Fedora Core
            |
            Ubuntu




1. Portable user experience


Linus Torvalds - Finland - Linux /  GNU - G Not Unix

    Unix OS


     010101       Hardware
                    |
     asm        Kernel <-- not open source
                    |
     C lang     Shell - 
                    |
     english    User -  ls .......


Getting around the system
--------

ls - list the files from the current directory

pwd - print working directory

cal

cal -3

cal 2021

cal 1752

cal -j

bc

man cal <-- to get the help on unix




                            /
                            |
            ---------------------------------
            |           |       |       |
            Users       etc     usr     home
            |           |
        ---------
        |
        apple

mounting - getting a partition mapped with a folder


                        MyComputer
                            |
                --------------------------
                |           |       |
                C:          D:      E: <-- drive letter convention
                |
            -------
            |
            Users
            |
            Rakesh

Super User Account : root  ( in windows we call it as Administrator )
End   User Account : jack, jane, ram, rahim, 

            Unix File System directory structure
             - The international standard struture for unix

top                 / <-- root directory
                    |
        ---------------------------------------------------------------------------------------
        |       |       |           |       |       |       |       |       |       |
1       usr     bin     sbin        opt     home    etc     dev     mnt     var     proc
        |       50      70                     |
    ---------                               --------------------------
    |       |                               |       |       |       |
2   bin     sbin                        rajesh    chhaya    naved   priya
    500     300

    jack /bin
    jane /sbin
    smith /bin /sbin /usr/bin
    robert /bin /sbin/ usr/bin /usr/sbin

0. 	/ - root directory of the UFS - 
1.      /usr - unix system resources
2.      /bin - binaries - executable files 
3.      /sbin - system administrator's binaries (used by the root user)
4.      /usr/bin
5.      /usr/sbin

6.      /opt  - optional software - C:\program files
7.      /etc - editable text for configuration
8.      /home - main directory for all the Users
9.      /dev - all unix devices as filenames, organized here
                file security - read, write, execute 
                                r     w       x
	/devices - for solaris os

	EVERYTHING IN UNIX IS A FILE

	PRINTER IS A FILE
	USER IS A FILE
	DIRECTORY IS A FILE
	DEVICE IS ALSO A FILE

10.     /mnt   - mount point access 
11.     /var   - variable data 
12.     /proc  - running processs as files 
		ps -ef
		ps -ef | more
		
	-e = system + users 
	-f = full list

	ps = process status


	ps -ef | grep username

	

	

	
13.     /tmp   - temporary files
14.     /lib   - libraries of unix      


			abc.cpp
			  |main() { }
		----------------------
		|		|
		abc.obj		abc.o
		|		|
		abc.exe		abc.out
		MEMORY		MEMEORY


			mylib.cpp
			| sum(){} avg(){} max(){} min(){}
		------------------
		|		|
		mylib.obj	mylib.o
		|		|
		mylib.dll	mylib.so [ shared objects ]
		HDD		HDD
				/lib


	cd /lib
	ls -R | grep pam



15.     /root  - this is the HOME directory of ROOT USER

		separator
		    |	
		/usr/bin <--- 
		| |   |
		1 2   3

			/
			|
		-----------------------
		|	|	|
		usr	sbin	bin
		|	(50)	(40)
		---------
		|	|
		bin	sbin
		(400)	(500)



File and directory related commands




Directory structure
------------------------

 top                    / <--- root directory
                        |
    -----------------------------------------------------
    |                                               |
 1  root <-- this is unix admin's home directory    home
       |                                             |
       |                                            naved
------------------
            |
2           office <-- mkdir office
            |                         
        -----------------------------------
        |                   |           |
3       mail              bank      abc.txt
        |                   |
    -----------------       ---------------------
    |       |       |       |       |       |
4   inbox outbox   pqr.txt  icici   hdfc  xyz.txt
    |         |               |       |
5 letter.txt  draft.txt     jan.lst  feb.lst


cd office
office#   cat > mail/inbox/letter.txt
data here
^d <-- to save it

office# cat > mail/outbox/draft.txt
your data here
^d <-- to save it


touch newFile.txt
172.17.245.210




goto root directory

1. goto the slash
2. goto the /root ( slash root )




mkdir - to make a folder
cd ..  - to exit one level Up
cd direcotry - to enter into the directory
rmdir directoryname - to remove the empty directory
mv oldname  newname 

mv - to rename the file/directory
mv is also used to move the file or directory


cd ../bank 
cd -   to toggle the last working directories


cd   -- to goto the user's home directory



File permissions
-------------------

	FOR ENSURING SECURITY

		- BECAUSE BY DEFAULT EVERYTHING IS IN<--"SECURED"
							
		FROM THE WORD INSECURED WE HAVE TO ACQUIRE IN->SECURED

	in unix there 3 users
	and 3 permissions


	in real life also the same



	TYPES OF USERS : 

	USER - You as the owner - user of the file / directory

	GROUP - Your family members (group members) - trusted members of a group

	OTHERS - Others - relatives, neighbours, tresspassers, strangers
			neither the user nor the group members
		

	TYPES OF PERMISSIONS : 

	Read your file / directory

	write to your file / directory

	Execute your file or directory

- means absense of permission
a letter means that permission is present


[ office = yash + prithvi + guruakash + prathmesh ]
Your diary (file)/bag(folder)
  |||
  ||| House
  ||| |||
  ||| ||| In Local Train/relatives place/party
  ||| ||| |||
  ??? ??? ???
  rwx rw- ---
1 234 567 890
  uuu ggg ooo   OWNER  GROUP     SIZE  MOD-time   file/directory
  ||| ||| |||     |      |         |       |         |
- rwx r-- ---  1 yash   office     98 Aug 24 14:45  myofficediary.txt
d rwx --- ---  1 yash   office     17 Aug 24 15:43  officebag
d rw- r-- r--  1 yash   family     17 Aug 24 15:43  yourdrawerAthome 
|              |
|	   hard link count
the type

d = directory
l = soft link
- = a regular file
b = block file
c = a character file
s = a socket file



	HOW TO APPLY IT


			SECURITY
			   |
		-------------------------
		|FLEXIBLE TO 		|EFFICIENT WAY TO OVERLAP
		| INDIVIDUAL LETTER	|ENTIRE SET 
		CHARACTER		OCTAL
		|			|
		r = READ		4	
		w = WRITE		2
		x = EXECUTE		1
		---------		---
		rwx			7
		r--			4
		rw-			6
		r-x			5
		-wx			3
		--x			1

		rwxrwxrwx		777
		r--r--r--		444
		rw-rw-rw-		666
		rwxrw-r--		754
		
			

	chmod = change the mode of the file

		chmod usertype+-=permission type   file/directory

		chmod u-r   file
		chmod u-rw  file
		chmod u-rwx file
		chmod r-u   file  ILLEGAL
	
		chmod u+rw,g+r,o-x  file 

			user with read write granted
			group with read granted
			others execute revoked

		
		

			file			directory
	===========================================================

	read		cat file		ls command to
			vi  file		view its content
	-----------------------------------------------------------
	write		modify it		edit the folder via
			via cat >>,		making new files
			via vi editor		cat>, cat>>, rm,
			*but does not mean	cp,mv,rmdir on
			deleting it		subfolders in it
	-----------------------------------------------------------
	execute		run it as a 		you can enter into it
			shell script		using cd command
			or a command
	-----------------------------------------------------------

umask = user mask


	there is something called as
	

				FILE		DIRECTORY

				============================
	BASE PERMISSION		6  6  6		7   7   7

	UMASK		      0	0  2  2	      0 0   2   2
     -
				------------------------------
	DEFAULT PERMISSION    0 6  4  4	      0 7   5   5
			       rw- r--r--	rwx r-x r-x	


				FILE		DIRECTORY

				============================
	BASE PERMISSION		6  6  6		7   7   7

	UMASK		      0	0  4  4	      0 0   4   4
     -
				------------------------------
	DEFAULT PERMISSION    0 6  2  2	      0 7   3   3
			       rw- -w--w-	rwx -wx -wx	



The BASE is the MAXIMUM permission u willevery get on a file
by default

	so if any hacker, or a program tries to create a file
	and awaits for a default execute over it , it is impossible






		chmod u=r,g=w,o=x file.txt

		user permission would only be r, 
	
		= will overwrite existing permission

-------------------------------------------------



The Vi Editor
Filters
Shell environment
Shell Scripting
--------------
	
	1. Vi editor


		vi = visual editor
		
		vim = visual improved


		King of all editors


			$ vi

			by default vi enters into a mode known as
 
				COMMAND MODE
					|ESC <-- back here
			---------------------------------
			|				|
			[i]				[:]	
			INSERT MODE		EX MODE/LAST LINE MODE
			|				|
			your data is here



		:w means to save the file and continue editing

		:w filename - save it as a filename 

		:q to quit 

		:wq filename - save it as a file and quit





	1. vi
	2. press i to switch to insert mode
	3. type your desired data lines
	4. press ESC to back to command mode
		repeat steps 2,3,4 if you want more lines 
		or editing
	5. press : to switch to Ex mode
	6. w to save the file [ error ] since no file name
	7. :w filename [ your choice of name ] to save as
	8. :q to quit




	1. vi jacky.txt <-- a new name
	2. press i
	3. type data
	4. press ESC
	5. press :wq <-- save and quit




	vi office <-- ie a folder
	press enter on entires to explore
	.. 
	.
	once a file is open
	:Explore to activate the menu again

	
	Poll for -> Is Explore in vi tried?


	$ info ls > smith.txt

	$ vi smith.txt

	in the vi

	:set number
	:set nonumber

	:1
	:$
	:40
	:50


	press w
	press b

	press e
	

	^E- scroll down

	^Y- scroll up



	dw - delete the current word

	5dw - delete 5 words

	dd - delete the current line

	5dd - delete 5 lines


	press u - undo the last action

	5u - 5 last actions undone


	yy - to copy a line

	p - to paste it


		cut			copy
		|dw			|yw <-- for a word
		|5dw			|5yw <-- for 5 words

		|dd			|yy <-- for a line
		|5dd			|5yy <-- for N lines
		------------------------- 
			    |
			    p - to paste it
			   5p - paste 5 times

	
		
			  paste
	



	Various filters
	----------------

	to acquire the desired output from a given input

	1. head 

		acquire top 10 lines - by default

		head filename
		head -n 5 filename
		head -n 15 filenaem


	2. tail
		acquire bottom 10 lines - by default

		tail filename
		tail -n 5 filename
		tail -n 15 filename

	3. cut 

		acquire the desired column from a given data file

		cut -f 1,2,3 filename

			-f means field number

		
			default delimiter is TAB key

			
		cut -d "|" -f 1 filename

			-d to specify a custom delimiter

			-f to field number

		can we use cut, head and tail together?


		yes 

	using the PIPE ie | symbol


		it is used as redirection operator



		cmd1 | cmd2 | cmd3 | cmd4 


		output of cmd1 converted as an input to cmd2

		and output of cmd2 is converted as an input to cmd3

		and so on
		
		the ultimate output of cmd4 is produced

		
		head -n 3 emp.lst | tail -n 1 | cut -d "|" -f2,3,4

	
	4. tr

		to translate the input as desired output



	5. grep

		Global Regular Expression Print

search for gupta
  grep gupta emp.lst

with color
  grep gupta emp.lst --color

with ignore case
  grep -i gupta emp.lst --color

with whole word
  grep -w gupta emp.lst --color

with whole word and ignore case
  grep -iw gupta emp.lst --color

search for man
  grep man emp.lst --color

does nothing
  grep \<man emp.lst --color

search for word begining with man
  grep "\<man" emp.lst --color

search for word ending with man
  grep "man\>" emp.lst --color

search word ending with gupta
  grep "gupta\>" emp.lst --color

search word begining with gupta
  grep "\<gupta" emp.lst --color

same as -w
  grep "\<gupta\>" emp.lst --color

search LINES begin with 9
  grep ^9 emp.lst --color

search 9 everywhere
  grep 9 emp.lst --color

search line ending with 9
  grep 9$ emp.lst --color
						

		12 3 4 567
		sa x   ena
		sa k s ena

		sa[xk]s*ena


	letter preceeding * is optional
	

ls a* <-- begin with a

ls *.txt <-- all files with extension as txt

but * has different meaning in GREP





thanx
thanks



	Customizing Vi editor
	----------------------
		there is a file known as 
		.vimrc [ if doesnt exist, make it ]

		it must be in your user's home directory

		/home/prithvi/.vimrc


		add following lines in it

		set number
		set nowrap
		abbr teh the
		abbr fp Force Point
		
	



Shell Environment
-------------------

		set  = local env of the user 

		set A=100
		A=100

		
		env = global env of the user



	login prompt :

		Enter username : root
		Enter password : ....
		
	now you are at a shell prompt $ <-- level 1

		A=100
		export A <-- now it is available to all the children level
		from level 1 jump to level2

		$ bash

		$ <-- level 2
			varibale A is not availble at level 2
		B=200
		export B , b is availle to level3 not the level 1

		$ bash

		$ <--- level 3



Shell Scripting
------------------


	Programming		vs		Scripting
	|					|
	C programming				X
	CPP					X
	Java JPL				Java script
	VB .net					VB script

	Python 					Python
	X					PL SQL scripting
	Shell					Shell
	|					|
	mission critical application		you control the flow
	development				of these mission critical
						apps

	data types				X
	operators				X
	functions				YES
	libraries { .jar files }		X

	DS					X
	Algo					X
	GUI					X
	Complex math expression			X
	Heavy file handling			X
	LOGIC here				X


	1. Automation of the business logic
	2.
	3.
	



	Command line arguments
		- passing parameters to the script at runtime


		$# -- argument count

		$* -- all the arguments [ vector ]
		
		$0 -- the current script name

		$1 to $9 all the 9 arguments passed

			
			$# = 9 
		$0	
		 |	$1	$2   $3    $4   $5    $6   $7 $8 $9
	$ myscript.sh  amar akbar anthony java oracle unix 12 30 40
		       <--------------------$*--------------------->	




Loops:

	while

	until

	for


	$ vi amar akbar anthony

		:w to save current file

		:next to switch to next file

		:prev to switch to prev file

		:wqa --  write to all files and quit

		:qa! -- discard all files
	




Stream editor
------------------

		non - interactive editor


	vi			sed
	|			|
	the user		the user passes
	interacts		the commands to edit
	by pressing		CRUD operation
	i			can be done using commands
	Esc
	:wq
	dw
	dd
	yy
	p




	sed 'action' filelist


	default action is - to print each line one by one


	sed '' emp.lst  -- prints each line one by one

	sed 'p' emp.lst -- 
		'' default is to print each line
		'p' + added extra print - hence twice the output


	sed '7p' emp.lst -- means to print only the 7th line

			+ default print of all lines

	sed -n '7p' emp.lst

			-n means to suppress default print
			and only print the 7th line

Find a pattern in vi
	/gupta -- to search the pattern
	
:set hls -- to hight light the selection

	press n to go forward
	press N to go backward


Find and Replace pattern in Vi
	:s/a/A  -- current line substitute a with A
	:1s/a/A   --1st line a with A

	:5,10s/a/A -- lines 5 to 10 a with A

	:1,$s/a/A -- all lines a with A

	above activities are only for the first occurence found

	:s/a/A/g -- g means global - all occurences
	:1s/a/A/g
	:5,10s/a/A/g
	
	:1,$s/a/A/g
		OR
	:%s/a/A/g


SUbstitute with sed

		replace sales with SALES on line 8
	1. sed -n '8s/sales/SALES/p' emp.lst
	
		replace from 8 to 10 for all occurences
	2. sed -n '8,10s/sales/SALES/gp' emp.lst


	
APPEND A RECORD

	append the record after the 5th line

	sed '5a \
		5555|sachin tendulkar|cricketer|cricket|12/Jan/80|8888
	' emp.lst

INSERT A RECORD
	insert before 5th line 
	sed '5i \
		5555|sachin tendulkar|cricketer|cricket|12/Jan/80|8888
	' emp.lst

DELETE A RECORD

	sed '5d' emp.lst

	cat -n emp.lst | sed '5,10d'


MENU
-----
1. add user
2. show users
3. show particular user by id
4. modify user
5. delete user
6. exit
------------

DATA FILE : user.list

1.add user
	- should accept values from the user
	- and appends the data at the end of the file
	- if that user name exists , then error msg
2. show users
	- would show all the users in a particular format

3. show particular user by its id
	- enter the user name, if not found, then error msg
4. modify user
	- ask the username, show the current details
	- ask to modify the password and city
	- if the user doesnt exist then error msg
5. delete user
	- ask the username, show the details
	- confirm to delete, if yes delete it
	- if not found, then error msg


	awk -F "|" 'BEGIN{ print("-------heading------") } {printf("|%5d|%-18s|%-10s|%-10s|%s|%7.2f|\n",$1,$2,$3,$4,$5,$6) } END{ print("---footer----") }' emp.lst	

	
		








